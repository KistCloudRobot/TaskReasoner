PREFIXES:
	PREFIX arbi: <http://www.arbi.com//ontologies#>;
	PREFIX isro: <http://www.arbi.com//BuiltInPlan#>;		

plan perform PostThrowWorkflow(){
	ID : "postthrowworkflow"
	precondition:
		FACT TaskReasoner($reasoner);
	body:
		$reasoner.sleep(1000);
		post perform ThrowWorkflow();
	utility : 120;
}

PLAN Conclude PersonCall($callID,$location,$cmd){
	ID : "personCallConcludePrepareStoring"
	precondition:
		FACT TaskReasoner($reasoner);
		$cmd == "PrepareStoring";
	body:
	
		System.out.println("personcall start");
		assert PrepareStoring($location);
		
		post perform PostThrowWorkflow();
		retract PersonCall($callID,$location,$cmd);
	utility : 1000;
}


PLAN Conclude PersonCall($callID,$location,$cmd){
	ID : "personCallConcludeStoring"
	precondition:
		FACT TaskReasoner($reasoner);
		$cmd == "Storing";
	body:
		System.out.println("personcall start");
		assert Storing($location);
		post perform PostThrowWorkflow();
		retract PersonCall($callID,$location,$cmd);
	utility : 1000;
}
PLAN Conclude PersonCall($callID,$location,$cmd){
	ID : "personCallConcludePrepareUnstoring"
	precondition:
		FACT TaskReasoner($reasoner);
		$cmd == "PrepareUnstoring";
	body:
		System.out.println("personcall start");
		
		assert PrepareUnstoring($location);
		post perform PostThrowWorkflow();
		retract PersonCall($callID,$location,$cmd);
	utility : 1000;
}
PLAN Conclude PersonCall($callID,$location,$cmd){
	ID : "personCallConcludeUnstoiring"
	precondition:
		FACT TaskReasoner($reasoner);
		$cmd == "Unstoring";
	body:
		System.out.println("personcall start");
		
		assert Unstoring($location);
		post perform PostThrowWorkflow();
		retract PersonCall($callID,$location,$cmd);
	utility : 1000;
}

PLAN Conclude PersonCall($callID,$location,$cmd){
	ID : "personCallConcludeUnstoiringtr"
	precondition:
		FACT TaskReasoner($reasoner);
	body:
		System.out.println("personcall start");
		System.out.println($callID + " " + $location + " " + $cmd);
	utility : 20;
}


PLAN PERFORM ThrowWorkflow() {
	ID : "LogisticManagerWorkflow"
	PRECONDITION :
		fact PrepareStoring($location);
		FACT TaskReasoner($reasoner);
	BODY :
		System.out.println("\n\n workflow start PREPARE_STORING \n\n");
		
		PERFORM ThrowGoal("CargoStoringPreparedRequestedTo");
		System.out.println("CargoStoringPrepared finalized");
		PERFORM WaitGoalComplete("CargoStoringPreparedRequestedFrom");
		
		
		PERFORM ThrowGoal("PalletTransportedRequestedTo");
		System.out.println("PalletTransportedRequested start");
		PERFORM WaitGoalComplete("PalletTransportedReportedFrom");
		System.out.println("PalletTransportedRequested finalized");
		PERFORM ThrowGoal("CargoStoringPreparedReportedTo");
		System.out.println("CargoStoringPreparedReportedTo start");
		
		PERFORM WaitGoalComplete("CargoStoringPreparedReportedFrom");
		System.out.println("CargoStoringPreparedReportedTo finalized");
		
		//PERFORM FinalizeService($serviceName, $cmd);
		
	UTILITY : 50;
}

PLAN PERFORM ThrowWorkflow() {
	ID : "LogisticManagerWorkflow2"
	PRECONDITION :
		fact Storing($location);
	BODY :
		System.out.println("\n\n workflow start Storing \n\n");
		
		PERFORM ThrowGoal("StoredCargoRequestedTo");
		
		PERFORM WaitGoalComplete("StoredCargoRequestedFrom");
		PERFORM ThrowGoalWithType("PalletTransportedRequestedTo","StoredCargo");


		PERFORM WaitGoalComplete("PalletTransportedReportedFrom");
		
		
		PERFORM ThrowGoal("StoredCargoReportedTo");
		//PERFORM FinalizeService($serviceName, $taskType);
		
		PERFORM WaitGoalComplete("StoredCargoReportedFrom");
		//PERFORM FinalizeService($serviceName, $taskType);
		
		System.out.println("StoredCargoRequest finalized");
	UTILITY : 50;
}

PLAN PERFORM ThrowWorkflow() {
	ID : "LogisticManagerWorkflow2NW"
	PRECONDITION :
		fact Storing($location);
		fact PerformedStoring();
	BODY :
		System.out.println("\n\n workflow start PASS STORING \n\n");
		
	UTILITY : 60;
}

PLAN PERFORM ThrowWorkflow() {
	ID : "LogisticManagerWorkflow3"
	PRECONDITION :
		FACT PrepareUnstoring($location);
	BODY :
		System.out.println("\n\n workflow start PrepareUnstoring \n\n");
		
		PERFORM ThrowGoal("CargoUnstoringPreparedRequestedTo");
		
		perform WaitGoalComplete("CargoUnstoringPreparedRequestedFrom");
		
		System.out.println("CargoUnstoringPrepared start");
		System.out.println("here?????1");
		
		
		
		PERFORM ThrowGoalWithType("PalletTransportedRequestedTo","CargoUnstoringPrepared");
		PERFORM ThrowGoalWithType("MovingRackTransportedRequestedTo","CargoUnstoringPrepared");
		
		
		PERFORM WaitGoalComplete("PalletTransportedReportedFrom");
		PERFORM WaitGoalComplete("MovingRackTransportedRequestedTo");
		
		
		
		
		PERFORM ThrowGoal("CargoUnstoringPreparedReportedTo");
		PERFORM WaitGoalComplete("CargoUnstoringPreparedReportedFrom");
		
		//PERFORM FinalizeService($serviceName, $taskType);
		
		System.out.println("CargoUnstoringPrepared finalized");
	UTILITY : 50;
}

PLAN PERFORM ThrowWorkflow() {
	ID : "LogisticManagerWorkflow4"
	PRECONDITION :
		FACT Unstoring($location);
	BODY :
		System.out.println("\n\n workflow start Unstoring \n\n");
		
		
		PERFORM ThrowGoal("UnstoredCargoRequestedTo");
		PERFORM WaitGoalComplete("UnstoredCargoRequestedFrom");
		
		
		PERFORM ThrowGoalWithType("PalletTransportedRequestedTo","UnstoredCargo");

		PERFORM ThrowGoalWithType("MovingRackTransportedRequestedTo","UnstoredCargo");


		
		
		System.out.println("goal thrown");
		
		PERFORM WaitGoalComplete("MovingRackTransportedRequestedFrom");
		PERFORM WaitGoalComplete("PalletTransportedReportedFrom");
		
		PERFORM ThrowGoal("UnstoredCargoReportedTo");
		PERFORM WaitGoalComplete("UnstoredCargoReportedFrom");
		
		//PERFORM FinalizeService($serviceName, $taskType);
		
		System.out.println("unstored cargo request finalized");
				
	UTILITY : 50;
}
PLAN PERFORM ThrowWorkflow() {
	ID : "LogisticManagerWorkflow4NW"
	PRECONDITION :
		FACT Unstoring($location);
		fact PerformedUnstoring();
	BODY :
		System.out.println("\n\n workflow start PASS Unstoring \n\n");
		
	UTILITY : 60;
}
PLAN PERFORM ThrowWorkflow() {
	ID : "LogisticManagerWorkflow5"
	PRECONDITION :
		FACT Unstoring($location);
		FACT Storing($sLocation);
	BODY :
		System.out.println("\n\n workflow start BOTH UNstoring Storing \n\n");
		
		System.out.println("Unstoring and Storing both executing");
		assert PerformedStoring();
		assert PerformedUnstoring();
		PERFORM ThrowGoal("StoredCargoRequestedTo");
		
		PERFORM WaitGoalComplete("StoredCargoRequestedFrom");
		
		PERFORM ThrowGoal("UnstoredCargoRequestedTo");
		PERFORM WaitGoalComplete("UnstoredCargoRequestedFrom");
		
		PERFORM ThrowGoalWithType("PalletTransportedRequestedTo","UnstoredCargoAndStoredCargo");
		PERFORM ThrowGoalWithType("MovingRackTransportedRequestedTo","UnstoredCargo");
		


		
		System.out.println("goal thrown");
		

		PERFORM WaitGoalComplete("MovingRackTransportedRequestedFrom");
		PERFORM WaitGoalComplete("PalletTransportedReportedFrom");
		
		PERFORM ThrowGoal("UnstoredCargoReportedTo");
		PERFORM WaitGoalComplete("UnstoredCargoReportedFrom");
		
		//PERFORM FinalizeService($serviceName, $taskType);
		
		System.out.println("unstored cargo request finalized");
				
	UTILITY : 100;
}


PLAN PERFORM ThrowGoal($goalName) {
	ID : "ThrowGoalCargoStoringPreparedRequestedTo"
	PRECONDITION :
		$goalName == "CargoStoringPreparedRequestedTo";
		FACT TaskReasoner($reasoner);
	BODY :
		$data = "(CargoStoringPreparedRequestedTo $worker $goalID $goal)";
		$reasoner.sendToTM("PostGoal", $data);
		PERFORM WaitGoalComplete($goalName);
	UTILITY : 10;
}

PLAN PERFORM ThrowGoal($goalName) {
	ID : "ThrowGoalStoredCargoRequestedTo"
	PRECONDITION :
		$goalName == "StoredCargoRequestedTo";
		FACT TaskReasoner($reasoner);
	BODY :
		$data = "(StoredCargoRequestedTo $manager $goalID $goal)";
		$reasoner.sendToTM("PostGoal", $data);
		PERFORM WaitGoalComplete($goalName);
	UTILITY : 10;
}

PLAN PERFORM ThrowGoal($goalName) {
	ID : "ThrowGoalUnstoredCargoRequestedTo"
	PRECONDITION :
		$goalName == "UnstoredCargoRequestedTo";
		FACT TaskReasoner($reasoner);
	BODY :
		$data = "(UnstoredCargoRequestedTo $manager $goalID $goal)";
		$reasoner.sendToTM("PostGoal", $data);
		PERFORM WaitGoalComplete($goalName);
	UTILITY : 10;
}

PLAN PERFORM ThrowGoal($goalName) {
	ID : "ThrowGoalCargoUnstoringPreparedRequestedTo"
	PRECONDITION :
		$goalName == "CargoUnstoringPreparedRequestedTo";
		FACT TaskReasoner($reasoner);
	BODY :
		$data = "(CargoUnstoringPreparedRequestedTo $manager $goalID $goal)";
		$reasoner.sendToTM("PostGoal", $data);
		PERFORM WaitGoalComplete($goalName);
	UTILITY : 10;
}



PLAN PERFORM FinalizeService(){
	ID : "FinalizeLogisticManagerWorkflow1"
	PRECONDITION :
		FACT PersonCall($callID, $location, $taskType);
		FACT GLMessageManager($glMessageManager);
	BODY :
		System.out.println("start finalize1");
		RETRACT CargoStoringPreparedRequestedTo($v1, $v2, $v3);
		System.out.println("start finalize2");
		RETRACT CargoStoringPreparedReportedFrom($v1, $v2, $v3);
		System.out.println("start finalize3");
		RETRACT PersonCall($callID, $location, $taskType);
		System.out.println("start finalize4");
		$data = "(context (CompletedPersonCall \"" + $callID + "\" \"" + $location + "\" \"" + $taskType + "\"))";
		System.out.println("start finalize5");
		$glMessageManager.assertToLTM($data);
		System.out.println("start finalize end");
	UTILITY : 10;
}


PLAN PERFORM FinalizeService($serviceName, $taskType){
	ID : "FinalizeLogisticManagerWorkflow2"
	PRECONDITION :
		$serviceName == "LogisticManager";
		FACT PersonCall($callID, $location, $taskType);	
		FACT TaskReasoner($reasoner);	
	BODY :
		RETRACT StoredCargoRequestedTo($v1, $v2, $v3);
		RETRACT StoredCargoReportedFrom($v1, $v2, $v3);
		$data = "(context (CompletedPersonCall \"" + $callID + "\" \"" + $location + "\" \"" + $taskType + "\"))";
		$glMessageManager.assertToLTM($data);
	UTILITY : 10;
}

PLAN PERFORM FinalizeService($serviceName, $taskType){
	ID : "FinalizeLogisticManagerWorkflow3"
	PRECONDITION :
		$serviceName == "LogisticManager";
		FACT PersonCall($callID, $location, $taskType);		
		FACT TaskReasoner($reasoner);
	BODY :
		RETRACT UnstoredCargoRequestedTo($v1, $v2, $v3);
		RETRACT UnstoredCargoReportedFrom($v1, $v2, $v3);
		$data = "(context (CompletedPersonCall \"" + $callID + "\" \"" + $location + "\" \"" + $taskType + "\"))";
		$glMessageManager.assertToLTM($data);
	UTILITY : 10;
}


PLAN PERFORM FinalizeService($serviceName, $taskType){
	ID : "FinalizeLogisticManagerWorkflow4"
	PRECONDITION :
		$serviceName == "LogisticManager";
		FACT PersonCall($callID, $location, $taskType);
		FACT TaskReasoner($reasoner);
	BODY :
		RETRACT CargoUnstoringPreparedRequestedTo($v1, $v2, $v3);
		RETRACT CargoUnstoringPreparedReportedFrom($v1, $v2, $v3);
		$data = "(context (CompletedPersonCall \"" + $callID + "\" \"" + $location + "\" \"" + $taskType + "\"))";
		$glMessageManager.assertToLTM($data);
	UTILITY : 10;
}